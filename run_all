#!/usr/bin/env python

import subprocess
import os
import sys
import click

all_reasoners = [ 'dlv', 'gringo' ]

def run_command_reasoner_example_articulation(command, reasoner, example, articulation, target):
   cmd = './run --commands={commands} --example={example} --articulations={articulations} --target={target} --reasoner={reasoner}'.format(
      commands = command, example = example, articulations = articulation, target = target, reasoner = reasoner)
   #print 'run_all: %s' % cmd
   subprocess.call(cmd, shell=True)

def run_command_reasoner_example(command, reasoner, example, articulations, target):
   if '{articulations}' in open('./commands/' + command).read():
      if not articulations:
         for articulation in os.listdir('./examples/' + example):
            if os.path.isdir('./examples/' + example + '/' + articulation):
               run_command_reasoner_example_articulation(command, reasoner, example, articulation, target)
      else:
         for articulation in articulations:
            run_command_reasoner_example_articulation(command, reasoner, example, articulation, target)
   else:
      run_command_reasoner_example_articulation(command, reasoner, example, '', target)

def run_command_reasoner(command, reasoner, examples, articulations, target):
   if '{example}' in open('./commands/' + command).read():
      if not examples:
         for example in os.listdir('./examples/'):
            run_command_reasoner_example(command, reasoner, example, articulations, target)
      else:
         for example in examples:
            run_command_reasoner_example(command, reasoner, example, articulations, target)
   else:
      run_command_reasoner_example(command, reasoner, '', articulations, target)

def run_command(command, reasoners, examples, articulations, target):
   if '{reasoner}' in open('./commands/' + command).read():
      if not reasoners:
         for reasoner in all_reasoners:
            run_command_reasoner(command, reasoner, examples, articulations, target)
      else:
         for reasoner in reasoners:
            run_command_reasoner(command, reasoner, examples, articulations, target)
   else:
      run_command_reasoner(command, '', examples, articulations, target)

@click.command()
@click.option('--commands', default=None, help='Provide a comma separated list from the available commands files.')
@click.option('--examples', default=None, help='Provide a comma separated list from the available examples')
@click.option('--articulations', default=None, help='Provide a comma separated list from the available example articulations.')
@click.option('--target', default='all', help='Choose between \'all\', a list (\'command1,command2,...\') or a sequence (\'command1-command3\') of command labels or \'clean\'. Default: all')
@click.option('--reasoners', default=','.join(all_reasoners), help='Provide a comma separated list from the available reasoners:  \'dlv\' and \'gringo\'')
def run_all(commands, examples, articulations, target, reasoners):
   if commands is None:
      commands = []
   else:
      commands = commands.split(',')
   if examples is None:
      examples = []
   else:
      examples = examples.split(',')
   if articulations is None:
      articulations = []
   else:
      articulations = articulations.split(',')
   if reasoners is None:
      reasoners = []
   else:
      reasoners = reasoners.split(',')
   #print commands
   #print examples
   #print articulations
   #print target
   #print reasoners
   if not commands:
      for command in os.listdir('./commands/'):
         run_command(command, reasoners, examples, articulations, target)
   else:
      for command in commands:
         run_command(command, reasoners, examples, articulations, target)

if __name__ == '__main__':
    run_all()
