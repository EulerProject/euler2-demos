%%% Euler regions
r(1..15).

%%% Concepts
tax(t1,0).
concept2(A, B) :- concept(A,B,_).
concept2(c1_A,0).
concept(c1_H,0,0).
concept(c1_B,0,1).
concept(c1_G,0,2).
concept2(c1_F,0).
tax(t2,1).
concept2(A, B) :- concept(A,B,_).
concept2(c2_A,1).
concept(c2_H,1,0).
concept(c2_B,1,1).
concept(c2_G,1,2).
concept2(c2_F,1).
%%% Euler Bit
bit(M, 0, V):-r(M),M1=M/1, V = M1 \ 4.
bit(M, 1, V):-r(M),M1=M/4, V = M1 \ 4.


%%% Meaning of regions
in(X, M) :- r(M),concept(X,T,N),N1=N+1,bit(M,T,N1).
out(X, M) :- r(M),concept(X,T,N),N1=N+1,not bit(M,T,N1).
in(X, M) :- r(M),concept2(X,_),not out(X, M).
out(X, M) :- out3(X, M, _), ix.
irs(M) :- in(X, M), out(X, M), r(M), concept2(X,_).

%%% Constraints of regions.
irs(X) :- ir(X, _).
vrs(X) :- vr(X, _).
vr(X, X) :- not irs(X), r(X).
ir(X, X) :- not vrs(X), r(X), pw.
ie(prod(A,B)) :- vr(X, A), ir(X, B), ix.
:- vrs(X), irs(X), pw.

%%% Inconsistency Explanation.
ie(s(R, A, Y)) :- pie(R, A, Y), not cc(R, Y), ix.
cc(R, Y) :- c(R, _, Y), ix.

%%% Parent-Child relations
%% ISA
% c1_B isa c1_A
ir(X, r2357) :- in(c1_B, X), out(c1_A, X), pw.
ir(X, prod(r2357,R)) :- in(c1_B,X), out3(c1_A, X, R), ix.
:- #count {X : vrs(X), in(c1_B,X), in(c1_A,X)} <= 0, pw.
pie(r2357, A, 1) :- ir(X, A), in(c1_B, X), in(c1_A, X), ix.
c(r2357, A, 1) :- vr(X, A), in(c1_B, X), in(c1_A, X), ix.

% c1_F isa c1_A
ir(X, r2358) :- in(c1_F, X), out(c1_A, X), pw.
ir(X, prod(r2358,R)) :- in(c1_F,X), out3(c1_A, X, R), ix.
:- #count {X : vrs(X), in(c1_F,X), in(c1_A,X)} <= 0, pw.
pie(r2358, A, 1) :- ir(X, A), in(c1_F, X), in(c1_A, X), ix.
c(r2358, A, 1) :- vr(X, A), in(c1_F, X), in(c1_A, X), ix.

%% coverage
out3(c1_A, X, r2359) :- out(c1_B, X), out(c1_F, X), ix.
out(c1_A, X) :- out(c1_B, X), out(c1_F, X), pw.
%% sibling disjointness
% c1_B ! c1_F
ir(X, r2360) :- in(c1_B, X), in(c1_F, X).
:- #count {X : vrs(X), in(c1_B,X), out(c1_F,X)} <= 0, pw.
:- #count {X : vrs(X), out(c1_B,X), in(c1_F,X)} <= 0, pw.
pie(r2360, A, 1) :- ir(X, A), in(c1_B, X), out(c1_F, X), ix.
c(r2360, A, 1) :- vr(X, A), in(c1_B, X), out(c1_F, X), ix.
pie(r2360, A, 2) :- ir(X, A), out(c1_B, X), in(c1_F, X), ix.
c(r2360, A, 2) :- vr(X, A), out(c1_B, X), in(c1_F, X), ix.

%% ISA
% c1_G isa c1_F
ir(X, r2361) :- in(c1_G, X), out(c1_F, X), pw.
ir(X, prod(r2361,R)) :- in(c1_G,X), out3(c1_F, X, R), ix.
:- #count {X : vrs(X), in(c1_G,X), in(c1_F,X)} <= 0, pw.
pie(r2361, A, 1) :- ir(X, A), in(c1_G, X), in(c1_F, X), ix.
c(r2361, A, 1) :- vr(X, A), in(c1_G, X), in(c1_F, X), ix.

% c1_H isa c1_F
ir(X, r2362) :- in(c1_H, X), out(c1_F, X), pw.
ir(X, prod(r2362,R)) :- in(c1_H,X), out3(c1_F, X, R), ix.
:- #count {X : vrs(X), in(c1_H,X), in(c1_F,X)} <= 0, pw.
pie(r2362, A, 1) :- ir(X, A), in(c1_H, X), in(c1_F, X), ix.
c(r2362, A, 1) :- vr(X, A), in(c1_H, X), in(c1_F, X), ix.

%% coverage
out3(c1_F, X, r2363) :- out(c1_G, X), out(c1_H, X), ix.
out(c1_F, X) :- out(c1_G, X), out(c1_H, X), pw.
%% sibling disjointness
% c1_G ! c1_H
ir(X, r2364) :- in(c1_G, X), in(c1_H, X).
:- #count {X : vrs(X), in(c1_G,X), out(c1_H,X)} <= 0, pw.
:- #count {X : vrs(X), out(c1_G,X), in(c1_H,X)} <= 0, pw.
pie(r2364, A, 1) :- ir(X, A), in(c1_G, X), out(c1_H, X), ix.
c(r2364, A, 1) :- vr(X, A), in(c1_G, X), out(c1_H, X), ix.
pie(r2364, A, 2) :- ir(X, A), out(c1_G, X), in(c1_H, X), ix.
c(r2364, A, 2) :- vr(X, A), out(c1_G, X), in(c1_H, X), ix.

%% ISA
% c2_B isa c2_A
ir(X, r2365) :- in(c2_B, X), out(c2_A, X), pw.
ir(X, prod(r2365,R)) :- in(c2_B,X), out3(c2_A, X, R), ix.
:- #count {X : vrs(X), in(c2_B,X), in(c2_A,X)} <= 0, pw.
pie(r2365, A, 1) :- ir(X, A), in(c2_B, X), in(c2_A, X), ix.
c(r2365, A, 1) :- vr(X, A), in(c2_B, X), in(c2_A, X), ix.

% c2_F isa c2_A
ir(X, r2366) :- in(c2_F, X), out(c2_A, X), pw.
ir(X, prod(r2366,R)) :- in(c2_F,X), out3(c2_A, X, R), ix.
:- #count {X : vrs(X), in(c2_F,X), in(c2_A,X)} <= 0, pw.
pie(r2366, A, 1) :- ir(X, A), in(c2_F, X), in(c2_A, X), ix.
c(r2366, A, 1) :- vr(X, A), in(c2_F, X), in(c2_A, X), ix.

%% coverage
out3(c2_A, X, r2367) :- out(c2_B, X), out(c2_F, X), ix.
out(c2_A, X) :- out(c2_B, X), out(c2_F, X), pw.
%% sibling disjointness
% c2_B ! c2_F
ir(X, r2368) :- in(c2_B, X), in(c2_F, X).
:- #count {X : vrs(X), in(c2_B,X), out(c2_F,X)} <= 0, pw.
:- #count {X : vrs(X), out(c2_B,X), in(c2_F,X)} <= 0, pw.
pie(r2368, A, 1) :- ir(X, A), in(c2_B, X), out(c2_F, X), ix.
c(r2368, A, 1) :- vr(X, A), in(c2_B, X), out(c2_F, X), ix.
pie(r2368, A, 2) :- ir(X, A), out(c2_B, X), in(c2_F, X), ix.
c(r2368, A, 2) :- vr(X, A), out(c2_B, X), in(c2_F, X), ix.

%% ISA
% c2_G isa c2_F
ir(X, r2369) :- in(c2_G, X), out(c2_F, X), pw.
ir(X, prod(r2369,R)) :- in(c2_G,X), out3(c2_F, X, R), ix.
:- #count {X : vrs(X), in(c2_G,X), in(c2_F,X)} <= 0, pw.
pie(r2369, A, 1) :- ir(X, A), in(c2_G, X), in(c2_F, X), ix.
c(r2369, A, 1) :- vr(X, A), in(c2_G, X), in(c2_F, X), ix.

% c2_H isa c2_F
ir(X, r2370) :- in(c2_H, X), out(c2_F, X), pw.
ir(X, prod(r2370,R)) :- in(c2_H,X), out3(c2_F, X, R), ix.
:- #count {X : vrs(X), in(c2_H,X), in(c2_F,X)} <= 0, pw.
pie(r2370, A, 1) :- ir(X, A), in(c2_H, X), in(c2_F, X), ix.
c(r2370, A, 1) :- vr(X, A), in(c2_H, X), in(c2_F, X), ix.

%% coverage
out3(c2_F, X, r2371) :- out(c2_G, X), out(c2_H, X), ix.
out(c2_F, X) :- out(c2_G, X), out(c2_H, X), pw.
%% sibling disjointness
% c2_G ! c2_H
ir(X, r2372) :- in(c2_G, X), in(c2_H, X).
:- #count {X : vrs(X), in(c2_G,X), out(c2_H,X)} <= 0, pw.
:- #count {X : vrs(X), out(c2_G,X), in(c2_H,X)} <= 0, pw.
pie(r2372, A, 1) :- ir(X, A), in(c2_G, X), out(c2_H, X), ix.
c(r2372, A, 1) :- vr(X, A), in(c2_G, X), out(c2_H, X), ix.
pie(r2372, A, 2) :- ir(X, A), out(c2_G, X), in(c2_H, X), ix.
c(r2372, A, 2) :- vr(X, A), out(c2_G, X), in(c2_H, X), ix.


%%% Articulations
% 1.B equals 2.B
ir(X, r2373) :- out(c1_B,X), in(c2_B,X).
ir(X, r2373) :- in(c1_B,X), out(c2_B,X).
ir(X, prod(r2373,R)) :- out3(c1_B, X, R), in(c2_B,X), ix.
ir(X, prod(r2373,R)) :- in(c1_B,X), out3(c2_B, X, R), ix.
:- #count {X : vrs(X), in(c1_B,X), in(c2_B,X)} <= 0, pw.
pie(r2373, A, 1) :- ir(X, A), in(c1_B, X), in(c2_B, X), ix.
c(r2373, A, 1) :- vr(X, A), in(c1_B, X), in(c2_B, X), ix.


% 1.F is_included_in 2.F
:- #count {X : vrs(X), in(c1_F,X), in(c2_F,X)} <= 0, pw.
:- #count {X : vrs(X), out(c1_F,X), in(c2_F,X)} <= 0, pw.
ir(X, r2374) :- in(c1_F,X), out(c2_F,X), pw.
pie(r2374, A, 1) :- ir(X, A), out(c1_F, X), in(c2_F, X), ix.
c(r2374, A, 1) :- vr(X, A), out(c1_F, X), in(c2_F, X), ix.

pie(r2374, A, 2) :- ir(X, A), in(c1_F, X), in(c2_F, X), ix.
c(r2374, A, 2) :- vr(X, A), in(c1_F, X), in(c2_F, X), ix.


% 1.A is_included_in 2.A
:- #count {X : vrs(X), in(c1_A,X), in(c2_A,X)} <= 0, pw.
:- #count {X : vrs(X), out(c1_A,X), in(c2_A,X)} <= 0, pw.
ir(X, r2375) :- in(c1_A,X), out(c2_A,X), pw.
pie(r2375, A, 1) :- ir(X, A), out(c1_A, X), in(c2_A, X), ix.
c(r2375, A, 1) :- vr(X, A), out(c1_A, X), in(c2_A, X), ix.

pie(r2375, A, 2) :- ir(X, A), in(c1_A, X), in(c2_A, X), ix.
c(r2375, A, 2) :- vr(X, A), in(c1_A, X), in(c2_A, X), ix.


%%% Decoding now
:- rel(X, Y, "="), rel(X, Y, "<"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "="), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "="), rel(X, Y, "><"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "="), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "<"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "<"), rel(X, Y, "><"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "<"), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, ">"), rel(X, Y, "><"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, ">"), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2), pw.
:- rel(X, Y, "><"), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2), pw.
:- not rel(X, Y, "="), not rel(X, Y, "<"), not rel(X, Y, ">"), not rel(X, Y, "><"), not rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2), N1 < N2, not ncf(X), not ncf(Y), pw.

rel(X, Y, "=") :- not hint(X, Y, 0), hint(X, Y, 1), not hint(X, Y, 2), pw.
rel(X, Y, "<") :- not hint(X, Y, 0), hint(X, Y, 1), hint(X, Y, 2), pw.
rel(X, Y, ">") :- hint(X, Y, 0), hint(X, Y, 1), not hint(X, Y, 2), pw.
rel(X, Y, "><") :- hint(X, Y, 0), hint(X, Y, 1), hint(X, Y, 2), pw.
rel(X, Y, "!") :- hint(X, Y, 0), not hint(X, Y, 1), hint(X, Y, 2), pw.


hint(X, Y, 0) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), in(X, R), out(Y, R), not ncf(X), not ncf(Y), pw.
hint(X, Y, 1) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), in(X, R), in(Y, R), not ncf(X), not ncf(Y), pw.
hint(X, Y, 2) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), out(X, R), in(Y, R), not ncf(X), not ncf(Y), pw.

